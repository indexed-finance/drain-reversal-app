/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import {
  ethers,
  EventFilter,
  Signer,
  BigNumber,
  BigNumberish,
  PopulatedTransaction,
} from "ethers";
import {
  Contract,
  ContractTransaction,
  Overrides,
  CallOverrides,
} from "@ethersproject/contracts";
import { BytesLike } from "@ethersproject/bytes";
import { Listener, Provider } from "@ethersproject/providers";
import { FunctionFragment, EventFragment, Result } from "@ethersproject/abi";

interface UniBurnInterface extends ethers.utils.Interface {
  functions: {
    "burnWETH()": FunctionFragment;
    "cc10()": FunctionFragment;
    "cc10Data()": FunctionFragment;
    "cc10LP()": FunctionFragment;
    "defi5()": FunctionFragment;
    "defi5Data()": FunctionFragment;
    "defi5LP()": FunctionFragment;
    "fff()": FunctionFragment;
    "fffData()": FunctionFragment;
    "fffLP()": FunctionFragment;
    "redeemCC10LP()": FunctionFragment;
    "redeemDEFI5LP()": FunctionFragment;
    "redeemFFFLP()": FunctionFragment;
    "weth()": FunctionFragment;
  };

  encodeFunctionData(functionFragment: "burnWETH", values?: undefined): string;
  encodeFunctionData(functionFragment: "cc10", values?: undefined): string;
  encodeFunctionData(functionFragment: "cc10Data", values?: undefined): string;
  encodeFunctionData(functionFragment: "cc10LP", values?: undefined): string;
  encodeFunctionData(functionFragment: "defi5", values?: undefined): string;
  encodeFunctionData(functionFragment: "defi5Data", values?: undefined): string;
  encodeFunctionData(functionFragment: "defi5LP", values?: undefined): string;
  encodeFunctionData(functionFragment: "fff", values?: undefined): string;
  encodeFunctionData(functionFragment: "fffData", values?: undefined): string;
  encodeFunctionData(functionFragment: "fffLP", values?: undefined): string;
  encodeFunctionData(
    functionFragment: "redeemCC10LP",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "redeemDEFI5LP",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "redeemFFFLP",
    values?: undefined
  ): string;
  encodeFunctionData(functionFragment: "weth", values?: undefined): string;

  decodeFunctionResult(functionFragment: "burnWETH", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "cc10", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "cc10Data", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "cc10LP", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "defi5", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "defi5Data", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "defi5LP", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "fff", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "fffData", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "fffLP", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "redeemCC10LP",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "redeemDEFI5LP",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "redeemFFFLP",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "weth", data: BytesLike): Result;

  events: {};
}

export class UniBurn extends Contract {
  connect(signerOrProvider: Signer | Provider | string): this;
  attach(addressOrName: string): this;
  deployed(): Promise<this>;

  on(event: EventFilter | string, listener: Listener): this;
  once(event: EventFilter | string, listener: Listener): this;
  addListener(eventName: EventFilter | string, listener: Listener): this;
  removeAllListeners(eventName: EventFilter | string): this;
  removeListener(eventName: any, listener: Listener): this;

  interface: UniBurnInterface;

  functions: {
    burnWETH(overrides?: Overrides): Promise<ContractTransaction>;

    "burnWETH()"(overrides?: Overrides): Promise<ContractTransaction>;

    cc10(
      overrides?: CallOverrides
    ): Promise<{
      0: string;
    }>;

    "cc10()"(
      overrides?: CallOverrides
    ): Promise<{
      0: string;
    }>;

    cc10Data(
      overrides?: CallOverrides
    ): Promise<{
      supply: BigNumber;
      ethBalance: BigNumber;
      poolBalance: BigNumber;
      0: BigNumber;
      1: BigNumber;
      2: BigNumber;
    }>;

    "cc10Data()"(
      overrides?: CallOverrides
    ): Promise<{
      supply: BigNumber;
      ethBalance: BigNumber;
      poolBalance: BigNumber;
      0: BigNumber;
      1: BigNumber;
      2: BigNumber;
    }>;

    cc10LP(
      overrides?: CallOverrides
    ): Promise<{
      0: string;
    }>;

    "cc10LP()"(
      overrides?: CallOverrides
    ): Promise<{
      0: string;
    }>;

    defi5(
      overrides?: CallOverrides
    ): Promise<{
      0: string;
    }>;

    "defi5()"(
      overrides?: CallOverrides
    ): Promise<{
      0: string;
    }>;

    defi5Data(
      overrides?: CallOverrides
    ): Promise<{
      supply: BigNumber;
      ethBalance: BigNumber;
      poolBalance: BigNumber;
      0: BigNumber;
      1: BigNumber;
      2: BigNumber;
    }>;

    "defi5Data()"(
      overrides?: CallOverrides
    ): Promise<{
      supply: BigNumber;
      ethBalance: BigNumber;
      poolBalance: BigNumber;
      0: BigNumber;
      1: BigNumber;
      2: BigNumber;
    }>;

    defi5LP(
      overrides?: CallOverrides
    ): Promise<{
      0: string;
    }>;

    "defi5LP()"(
      overrides?: CallOverrides
    ): Promise<{
      0: string;
    }>;

    fff(
      overrides?: CallOverrides
    ): Promise<{
      0: string;
    }>;

    "fff()"(
      overrides?: CallOverrides
    ): Promise<{
      0: string;
    }>;

    fffData(
      overrides?: CallOverrides
    ): Promise<{
      supply: BigNumber;
      ethBalance: BigNumber;
      poolBalance: BigNumber;
      0: BigNumber;
      1: BigNumber;
      2: BigNumber;
    }>;

    "fffData()"(
      overrides?: CallOverrides
    ): Promise<{
      supply: BigNumber;
      ethBalance: BigNumber;
      poolBalance: BigNumber;
      0: BigNumber;
      1: BigNumber;
      2: BigNumber;
    }>;

    fffLP(
      overrides?: CallOverrides
    ): Promise<{
      0: string;
    }>;

    "fffLP()"(
      overrides?: CallOverrides
    ): Promise<{
      0: string;
    }>;

    redeemCC10LP(overrides?: Overrides): Promise<ContractTransaction>;

    "redeemCC10LP()"(overrides?: Overrides): Promise<ContractTransaction>;

    redeemDEFI5LP(overrides?: Overrides): Promise<ContractTransaction>;

    "redeemDEFI5LP()"(overrides?: Overrides): Promise<ContractTransaction>;

    redeemFFFLP(overrides?: Overrides): Promise<ContractTransaction>;

    "redeemFFFLP()"(overrides?: Overrides): Promise<ContractTransaction>;

    weth(
      overrides?: CallOverrides
    ): Promise<{
      0: string;
    }>;

    "weth()"(
      overrides?: CallOverrides
    ): Promise<{
      0: string;
    }>;
  };

  burnWETH(overrides?: Overrides): Promise<ContractTransaction>;

  "burnWETH()"(overrides?: Overrides): Promise<ContractTransaction>;

  cc10(overrides?: CallOverrides): Promise<string>;

  "cc10()"(overrides?: CallOverrides): Promise<string>;

  cc10Data(
    overrides?: CallOverrides
  ): Promise<{
    supply: BigNumber;
    ethBalance: BigNumber;
    poolBalance: BigNumber;
    0: BigNumber;
    1: BigNumber;
    2: BigNumber;
  }>;

  "cc10Data()"(
    overrides?: CallOverrides
  ): Promise<{
    supply: BigNumber;
    ethBalance: BigNumber;
    poolBalance: BigNumber;
    0: BigNumber;
    1: BigNumber;
    2: BigNumber;
  }>;

  cc10LP(overrides?: CallOverrides): Promise<string>;

  "cc10LP()"(overrides?: CallOverrides): Promise<string>;

  defi5(overrides?: CallOverrides): Promise<string>;

  "defi5()"(overrides?: CallOverrides): Promise<string>;

  defi5Data(
    overrides?: CallOverrides
  ): Promise<{
    supply: BigNumber;
    ethBalance: BigNumber;
    poolBalance: BigNumber;
    0: BigNumber;
    1: BigNumber;
    2: BigNumber;
  }>;

  "defi5Data()"(
    overrides?: CallOverrides
  ): Promise<{
    supply: BigNumber;
    ethBalance: BigNumber;
    poolBalance: BigNumber;
    0: BigNumber;
    1: BigNumber;
    2: BigNumber;
  }>;

  defi5LP(overrides?: CallOverrides): Promise<string>;

  "defi5LP()"(overrides?: CallOverrides): Promise<string>;

  fff(overrides?: CallOverrides): Promise<string>;

  "fff()"(overrides?: CallOverrides): Promise<string>;

  fffData(
    overrides?: CallOverrides
  ): Promise<{
    supply: BigNumber;
    ethBalance: BigNumber;
    poolBalance: BigNumber;
    0: BigNumber;
    1: BigNumber;
    2: BigNumber;
  }>;

  "fffData()"(
    overrides?: CallOverrides
  ): Promise<{
    supply: BigNumber;
    ethBalance: BigNumber;
    poolBalance: BigNumber;
    0: BigNumber;
    1: BigNumber;
    2: BigNumber;
  }>;

  fffLP(overrides?: CallOverrides): Promise<string>;

  "fffLP()"(overrides?: CallOverrides): Promise<string>;

  redeemCC10LP(overrides?: Overrides): Promise<ContractTransaction>;

  "redeemCC10LP()"(overrides?: Overrides): Promise<ContractTransaction>;

  redeemDEFI5LP(overrides?: Overrides): Promise<ContractTransaction>;

  "redeemDEFI5LP()"(overrides?: Overrides): Promise<ContractTransaction>;

  redeemFFFLP(overrides?: Overrides): Promise<ContractTransaction>;

  "redeemFFFLP()"(overrides?: Overrides): Promise<ContractTransaction>;

  weth(overrides?: CallOverrides): Promise<string>;

  "weth()"(overrides?: CallOverrides): Promise<string>;

  callStatic: {
    burnWETH(overrides?: CallOverrides): Promise<void>;

    "burnWETH()"(overrides?: CallOverrides): Promise<void>;

    cc10(overrides?: CallOverrides): Promise<string>;

    "cc10()"(overrides?: CallOverrides): Promise<string>;

    cc10Data(
      overrides?: CallOverrides
    ): Promise<{
      supply: BigNumber;
      ethBalance: BigNumber;
      poolBalance: BigNumber;
      0: BigNumber;
      1: BigNumber;
      2: BigNumber;
    }>;

    "cc10Data()"(
      overrides?: CallOverrides
    ): Promise<{
      supply: BigNumber;
      ethBalance: BigNumber;
      poolBalance: BigNumber;
      0: BigNumber;
      1: BigNumber;
      2: BigNumber;
    }>;

    cc10LP(overrides?: CallOverrides): Promise<string>;

    "cc10LP()"(overrides?: CallOverrides): Promise<string>;

    defi5(overrides?: CallOverrides): Promise<string>;

    "defi5()"(overrides?: CallOverrides): Promise<string>;

    defi5Data(
      overrides?: CallOverrides
    ): Promise<{
      supply: BigNumber;
      ethBalance: BigNumber;
      poolBalance: BigNumber;
      0: BigNumber;
      1: BigNumber;
      2: BigNumber;
    }>;

    "defi5Data()"(
      overrides?: CallOverrides
    ): Promise<{
      supply: BigNumber;
      ethBalance: BigNumber;
      poolBalance: BigNumber;
      0: BigNumber;
      1: BigNumber;
      2: BigNumber;
    }>;

    defi5LP(overrides?: CallOverrides): Promise<string>;

    "defi5LP()"(overrides?: CallOverrides): Promise<string>;

    fff(overrides?: CallOverrides): Promise<string>;

    "fff()"(overrides?: CallOverrides): Promise<string>;

    fffData(
      overrides?: CallOverrides
    ): Promise<{
      supply: BigNumber;
      ethBalance: BigNumber;
      poolBalance: BigNumber;
      0: BigNumber;
      1: BigNumber;
      2: BigNumber;
    }>;

    "fffData()"(
      overrides?: CallOverrides
    ): Promise<{
      supply: BigNumber;
      ethBalance: BigNumber;
      poolBalance: BigNumber;
      0: BigNumber;
      1: BigNumber;
      2: BigNumber;
    }>;

    fffLP(overrides?: CallOverrides): Promise<string>;

    "fffLP()"(overrides?: CallOverrides): Promise<string>;

    redeemCC10LP(overrides?: CallOverrides): Promise<void>;

    "redeemCC10LP()"(overrides?: CallOverrides): Promise<void>;

    redeemDEFI5LP(overrides?: CallOverrides): Promise<void>;

    "redeemDEFI5LP()"(overrides?: CallOverrides): Promise<void>;

    redeemFFFLP(overrides?: CallOverrides): Promise<void>;

    "redeemFFFLP()"(overrides?: CallOverrides): Promise<void>;

    weth(overrides?: CallOverrides): Promise<string>;

    "weth()"(overrides?: CallOverrides): Promise<string>;
  };

  filters: {};

  estimateGas: {
    burnWETH(overrides?: Overrides): Promise<BigNumber>;

    "burnWETH()"(overrides?: Overrides): Promise<BigNumber>;

    cc10(overrides?: CallOverrides): Promise<BigNumber>;

    "cc10()"(overrides?: CallOverrides): Promise<BigNumber>;

    cc10Data(overrides?: CallOverrides): Promise<BigNumber>;

    "cc10Data()"(overrides?: CallOverrides): Promise<BigNumber>;

    cc10LP(overrides?: CallOverrides): Promise<BigNumber>;

    "cc10LP()"(overrides?: CallOverrides): Promise<BigNumber>;

    defi5(overrides?: CallOverrides): Promise<BigNumber>;

    "defi5()"(overrides?: CallOverrides): Promise<BigNumber>;

    defi5Data(overrides?: CallOverrides): Promise<BigNumber>;

    "defi5Data()"(overrides?: CallOverrides): Promise<BigNumber>;

    defi5LP(overrides?: CallOverrides): Promise<BigNumber>;

    "defi5LP()"(overrides?: CallOverrides): Promise<BigNumber>;

    fff(overrides?: CallOverrides): Promise<BigNumber>;

    "fff()"(overrides?: CallOverrides): Promise<BigNumber>;

    fffData(overrides?: CallOverrides): Promise<BigNumber>;

    "fffData()"(overrides?: CallOverrides): Promise<BigNumber>;

    fffLP(overrides?: CallOverrides): Promise<BigNumber>;

    "fffLP()"(overrides?: CallOverrides): Promise<BigNumber>;

    redeemCC10LP(overrides?: Overrides): Promise<BigNumber>;

    "redeemCC10LP()"(overrides?: Overrides): Promise<BigNumber>;

    redeemDEFI5LP(overrides?: Overrides): Promise<BigNumber>;

    "redeemDEFI5LP()"(overrides?: Overrides): Promise<BigNumber>;

    redeemFFFLP(overrides?: Overrides): Promise<BigNumber>;

    "redeemFFFLP()"(overrides?: Overrides): Promise<BigNumber>;

    weth(overrides?: CallOverrides): Promise<BigNumber>;

    "weth()"(overrides?: CallOverrides): Promise<BigNumber>;
  };

  populateTransaction: {
    burnWETH(overrides?: Overrides): Promise<PopulatedTransaction>;

    "burnWETH()"(overrides?: Overrides): Promise<PopulatedTransaction>;

    cc10(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    "cc10()"(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    cc10Data(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    "cc10Data()"(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    cc10LP(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    "cc10LP()"(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    defi5(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    "defi5()"(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    defi5Data(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    "defi5Data()"(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    defi5LP(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    "defi5LP()"(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    fff(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    "fff()"(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    fffData(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    "fffData()"(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    fffLP(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    "fffLP()"(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    redeemCC10LP(overrides?: Overrides): Promise<PopulatedTransaction>;

    "redeemCC10LP()"(overrides?: Overrides): Promise<PopulatedTransaction>;

    redeemDEFI5LP(overrides?: Overrides): Promise<PopulatedTransaction>;

    "redeemDEFI5LP()"(overrides?: Overrides): Promise<PopulatedTransaction>;

    redeemFFFLP(overrides?: Overrides): Promise<PopulatedTransaction>;

    "redeemFFFLP()"(overrides?: Overrides): Promise<PopulatedTransaction>;

    weth(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    "weth()"(overrides?: CallOverrides): Promise<PopulatedTransaction>;
  };
}
