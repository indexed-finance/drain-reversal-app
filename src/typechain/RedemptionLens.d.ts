/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import {
  ethers,
  EventFilter,
  Signer,
  BigNumber,
  BigNumberish,
  PopulatedTransaction,
} from "ethers";
import {
  Contract,
  ContractTransaction,
  CallOverrides,
} from "@ethersproject/contracts";
import { BytesLike } from "@ethersproject/bytes";
import { Listener, Provider } from "@ethersproject/providers";
import { FunctionFragment, EventFragment, Result } from "@ethersproject/abi";

interface RedemptionLensInterface extends ethers.utils.Interface {
  functions: {
    "getPairAssetsRedeemable(address,uint256)": FunctionFragment;
    "getPoolAssetsRedeemable(address,uint256)": FunctionFragment;
    "getRedeemableBalances(address)": FunctionFragment;
  };

  encodeFunctionData(
    functionFragment: "getPairAssetsRedeemable",
    values: [string, BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "getPoolAssetsRedeemable",
    values: [string, BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "getRedeemableBalances",
    values: [string]
  ): string;

  decodeFunctionResult(
    functionFragment: "getPairAssetsRedeemable",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getPoolAssetsRedeemable",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getRedeemableBalances",
    data: BytesLike
  ): Result;

  events: {};
}

export class RedemptionLens extends Contract {
  connect(signerOrProvider: Signer | Provider | string): this;
  attach(addressOrName: string): this;
  deployed(): Promise<this>;

  on(event: EventFilter | string, listener: Listener): this;
  once(event: EventFilter | string, listener: Listener): this;
  addListener(eventName: EventFilter | string, listener: Listener): this;
  removeAllListeners(eventName: EventFilter | string): this;
  removeListener(eventName: any, listener: Listener): this;

  interface: RedemptionLensInterface;

  functions: {
    getPairAssetsRedeemable(
      lpToken: string,
      pairAmount: BigNumberish,
      overrides?: CallOverrides
    ): Promise<{
      tokenAmounts: {
        pairAmount: BigNumber;
        poolAmount: BigNumber;
        ethAmount: BigNumber;
        stakedAmount: BigNumber;
        tokens: string[];
        amounts: BigNumber[];
        0: BigNumber;
        1: BigNumber;
        2: BigNumber;
        3: BigNumber;
        4: string[];
        5: BigNumber[];
      };
      0: {
        pairAmount: BigNumber;
        poolAmount: BigNumber;
        ethAmount: BigNumber;
        stakedAmount: BigNumber;
        tokens: string[];
        amounts: BigNumber[];
        0: BigNumber;
        1: BigNumber;
        2: BigNumber;
        3: BigNumber;
        4: string[];
        5: BigNumber[];
      };
    }>;

    "getPairAssetsRedeemable(address,uint256)"(
      lpToken: string,
      pairAmount: BigNumberish,
      overrides?: CallOverrides
    ): Promise<{
      tokenAmounts: {
        pairAmount: BigNumber;
        poolAmount: BigNumber;
        ethAmount: BigNumber;
        stakedAmount: BigNumber;
        tokens: string[];
        amounts: BigNumber[];
        0: BigNumber;
        1: BigNumber;
        2: BigNumber;
        3: BigNumber;
        4: string[];
        5: BigNumber[];
      };
      0: {
        pairAmount: BigNumber;
        poolAmount: BigNumber;
        ethAmount: BigNumber;
        stakedAmount: BigNumber;
        tokens: string[];
        amounts: BigNumber[];
        0: BigNumber;
        1: BigNumber;
        2: BigNumber;
        3: BigNumber;
        4: string[];
        5: BigNumber[];
      };
    }>;

    getPoolAssetsRedeemable(
      pool: string,
      poolAmount: BigNumberish,
      overrides?: CallOverrides
    ): Promise<{
      tokenAmounts: {
        pairAmount: BigNumber;
        poolAmount: BigNumber;
        ethAmount: BigNumber;
        stakedAmount: BigNumber;
        tokens: string[];
        amounts: BigNumber[];
        0: BigNumber;
        1: BigNumber;
        2: BigNumber;
        3: BigNumber;
        4: string[];
        5: BigNumber[];
      };
      0: {
        pairAmount: BigNumber;
        poolAmount: BigNumber;
        ethAmount: BigNumber;
        stakedAmount: BigNumber;
        tokens: string[];
        amounts: BigNumber[];
        0: BigNumber;
        1: BigNumber;
        2: BigNumber;
        3: BigNumber;
        4: string[];
        5: BigNumber[];
      };
    }>;

    "getPoolAssetsRedeemable(address,uint256)"(
      pool: string,
      poolAmount: BigNumberish,
      overrides?: CallOverrides
    ): Promise<{
      tokenAmounts: {
        pairAmount: BigNumber;
        poolAmount: BigNumber;
        ethAmount: BigNumber;
        stakedAmount: BigNumber;
        tokens: string[];
        amounts: BigNumber[];
        0: BigNumber;
        1: BigNumber;
        2: BigNumber;
        3: BigNumber;
        4: string[];
        5: BigNumber[];
      };
      0: {
        pairAmount: BigNumber;
        poolAmount: BigNumber;
        ethAmount: BigNumber;
        stakedAmount: BigNumber;
        tokens: string[];
        amounts: BigNumber[];
        0: BigNumber;
        1: BigNumber;
        2: BigNumber;
        3: BigNumber;
        4: string[];
        5: BigNumber[];
      };
    }>;

    getRedeemableBalances(
      account: string,
      overrides?: CallOverrides
    ): Promise<{
      defi5_amounts: {
        pairAmount: BigNumber;
        poolAmount: BigNumber;
        ethAmount: BigNumber;
        stakedAmount: BigNumber;
        tokens: string[];
        amounts: BigNumber[];
        0: BigNumber;
        1: BigNumber;
        2: BigNumber;
        3: BigNumber;
        4: string[];
        5: BigNumber[];
      };
      cc10_amounts: {
        pairAmount: BigNumber;
        poolAmount: BigNumber;
        ethAmount: BigNumber;
        stakedAmount: BigNumber;
        tokens: string[];
        amounts: BigNumber[];
        0: BigNumber;
        1: BigNumber;
        2: BigNumber;
        3: BigNumber;
        4: string[];
        5: BigNumber[];
      };
      fff_amounts: {
        pairAmount: BigNumber;
        poolAmount: BigNumber;
        ethAmount: BigNumber;
        stakedAmount: BigNumber;
        tokens: string[];
        amounts: BigNumber[];
        0: BigNumber;
        1: BigNumber;
        2: BigNumber;
        3: BigNumber;
        4: string[];
        5: BigNumber[];
      };
      defi5LP_amounts: {
        pairAmount: BigNumber;
        poolAmount: BigNumber;
        ethAmount: BigNumber;
        stakedAmount: BigNumber;
        tokens: string[];
        amounts: BigNumber[];
        0: BigNumber;
        1: BigNumber;
        2: BigNumber;
        3: BigNumber;
        4: string[];
        5: BigNumber[];
      };
      cc10LP_amounts: {
        pairAmount: BigNumber;
        poolAmount: BigNumber;
        ethAmount: BigNumber;
        stakedAmount: BigNumber;
        tokens: string[];
        amounts: BigNumber[];
        0: BigNumber;
        1: BigNumber;
        2: BigNumber;
        3: BigNumber;
        4: string[];
        5: BigNumber[];
      };
      fffLP_amounts: {
        pairAmount: BigNumber;
        poolAmount: BigNumber;
        ethAmount: BigNumber;
        stakedAmount: BigNumber;
        tokens: string[];
        amounts: BigNumber[];
        0: BigNumber;
        1: BigNumber;
        2: BigNumber;
        3: BigNumber;
        4: string[];
        5: BigNumber[];
      };
      0: {
        pairAmount: BigNumber;
        poolAmount: BigNumber;
        ethAmount: BigNumber;
        stakedAmount: BigNumber;
        tokens: string[];
        amounts: BigNumber[];
        0: BigNumber;
        1: BigNumber;
        2: BigNumber;
        3: BigNumber;
        4: string[];
        5: BigNumber[];
      };
      1: {
        pairAmount: BigNumber;
        poolAmount: BigNumber;
        ethAmount: BigNumber;
        stakedAmount: BigNumber;
        tokens: string[];
        amounts: BigNumber[];
        0: BigNumber;
        1: BigNumber;
        2: BigNumber;
        3: BigNumber;
        4: string[];
        5: BigNumber[];
      };
      2: {
        pairAmount: BigNumber;
        poolAmount: BigNumber;
        ethAmount: BigNumber;
        stakedAmount: BigNumber;
        tokens: string[];
        amounts: BigNumber[];
        0: BigNumber;
        1: BigNumber;
        2: BigNumber;
        3: BigNumber;
        4: string[];
        5: BigNumber[];
      };
      3: {
        pairAmount: BigNumber;
        poolAmount: BigNumber;
        ethAmount: BigNumber;
        stakedAmount: BigNumber;
        tokens: string[];
        amounts: BigNumber[];
        0: BigNumber;
        1: BigNumber;
        2: BigNumber;
        3: BigNumber;
        4: string[];
        5: BigNumber[];
      };
      4: {
        pairAmount: BigNumber;
        poolAmount: BigNumber;
        ethAmount: BigNumber;
        stakedAmount: BigNumber;
        tokens: string[];
        amounts: BigNumber[];
        0: BigNumber;
        1: BigNumber;
        2: BigNumber;
        3: BigNumber;
        4: string[];
        5: BigNumber[];
      };
      5: {
        pairAmount: BigNumber;
        poolAmount: BigNumber;
        ethAmount: BigNumber;
        stakedAmount: BigNumber;
        tokens: string[];
        amounts: BigNumber[];
        0: BigNumber;
        1: BigNumber;
        2: BigNumber;
        3: BigNumber;
        4: string[];
        5: BigNumber[];
      };
    }>;

    "getRedeemableBalances(address)"(
      account: string,
      overrides?: CallOverrides
    ): Promise<{
      defi5_amounts: {
        pairAmount: BigNumber;
        poolAmount: BigNumber;
        ethAmount: BigNumber;
        stakedAmount: BigNumber;
        tokens: string[];
        amounts: BigNumber[];
        0: BigNumber;
        1: BigNumber;
        2: BigNumber;
        3: BigNumber;
        4: string[];
        5: BigNumber[];
      };
      cc10_amounts: {
        pairAmount: BigNumber;
        poolAmount: BigNumber;
        ethAmount: BigNumber;
        stakedAmount: BigNumber;
        tokens: string[];
        amounts: BigNumber[];
        0: BigNumber;
        1: BigNumber;
        2: BigNumber;
        3: BigNumber;
        4: string[];
        5: BigNumber[];
      };
      fff_amounts: {
        pairAmount: BigNumber;
        poolAmount: BigNumber;
        ethAmount: BigNumber;
        stakedAmount: BigNumber;
        tokens: string[];
        amounts: BigNumber[];
        0: BigNumber;
        1: BigNumber;
        2: BigNumber;
        3: BigNumber;
        4: string[];
        5: BigNumber[];
      };
      defi5LP_amounts: {
        pairAmount: BigNumber;
        poolAmount: BigNumber;
        ethAmount: BigNumber;
        stakedAmount: BigNumber;
        tokens: string[];
        amounts: BigNumber[];
        0: BigNumber;
        1: BigNumber;
        2: BigNumber;
        3: BigNumber;
        4: string[];
        5: BigNumber[];
      };
      cc10LP_amounts: {
        pairAmount: BigNumber;
        poolAmount: BigNumber;
        ethAmount: BigNumber;
        stakedAmount: BigNumber;
        tokens: string[];
        amounts: BigNumber[];
        0: BigNumber;
        1: BigNumber;
        2: BigNumber;
        3: BigNumber;
        4: string[];
        5: BigNumber[];
      };
      fffLP_amounts: {
        pairAmount: BigNumber;
        poolAmount: BigNumber;
        ethAmount: BigNumber;
        stakedAmount: BigNumber;
        tokens: string[];
        amounts: BigNumber[];
        0: BigNumber;
        1: BigNumber;
        2: BigNumber;
        3: BigNumber;
        4: string[];
        5: BigNumber[];
      };
      0: {
        pairAmount: BigNumber;
        poolAmount: BigNumber;
        ethAmount: BigNumber;
        stakedAmount: BigNumber;
        tokens: string[];
        amounts: BigNumber[];
        0: BigNumber;
        1: BigNumber;
        2: BigNumber;
        3: BigNumber;
        4: string[];
        5: BigNumber[];
      };
      1: {
        pairAmount: BigNumber;
        poolAmount: BigNumber;
        ethAmount: BigNumber;
        stakedAmount: BigNumber;
        tokens: string[];
        amounts: BigNumber[];
        0: BigNumber;
        1: BigNumber;
        2: BigNumber;
        3: BigNumber;
        4: string[];
        5: BigNumber[];
      };
      2: {
        pairAmount: BigNumber;
        poolAmount: BigNumber;
        ethAmount: BigNumber;
        stakedAmount: BigNumber;
        tokens: string[];
        amounts: BigNumber[];
        0: BigNumber;
        1: BigNumber;
        2: BigNumber;
        3: BigNumber;
        4: string[];
        5: BigNumber[];
      };
      3: {
        pairAmount: BigNumber;
        poolAmount: BigNumber;
        ethAmount: BigNumber;
        stakedAmount: BigNumber;
        tokens: string[];
        amounts: BigNumber[];
        0: BigNumber;
        1: BigNumber;
        2: BigNumber;
        3: BigNumber;
        4: string[];
        5: BigNumber[];
      };
      4: {
        pairAmount: BigNumber;
        poolAmount: BigNumber;
        ethAmount: BigNumber;
        stakedAmount: BigNumber;
        tokens: string[];
        amounts: BigNumber[];
        0: BigNumber;
        1: BigNumber;
        2: BigNumber;
        3: BigNumber;
        4: string[];
        5: BigNumber[];
      };
      5: {
        pairAmount: BigNumber;
        poolAmount: BigNumber;
        ethAmount: BigNumber;
        stakedAmount: BigNumber;
        tokens: string[];
        amounts: BigNumber[];
        0: BigNumber;
        1: BigNumber;
        2: BigNumber;
        3: BigNumber;
        4: string[];
        5: BigNumber[];
      };
    }>;
  };

  getPairAssetsRedeemable(
    lpToken: string,
    pairAmount: BigNumberish,
    overrides?: CallOverrides
  ): Promise<{
    pairAmount: BigNumber;
    poolAmount: BigNumber;
    ethAmount: BigNumber;
    stakedAmount: BigNumber;
    tokens: string[];
    amounts: BigNumber[];
    0: BigNumber;
    1: BigNumber;
    2: BigNumber;
    3: BigNumber;
    4: string[];
    5: BigNumber[];
  }>;

  "getPairAssetsRedeemable(address,uint256)"(
    lpToken: string,
    pairAmount: BigNumberish,
    overrides?: CallOverrides
  ): Promise<{
    pairAmount: BigNumber;
    poolAmount: BigNumber;
    ethAmount: BigNumber;
    stakedAmount: BigNumber;
    tokens: string[];
    amounts: BigNumber[];
    0: BigNumber;
    1: BigNumber;
    2: BigNumber;
    3: BigNumber;
    4: string[];
    5: BigNumber[];
  }>;

  getPoolAssetsRedeemable(
    pool: string,
    poolAmount: BigNumberish,
    overrides?: CallOverrides
  ): Promise<{
    pairAmount: BigNumber;
    poolAmount: BigNumber;
    ethAmount: BigNumber;
    stakedAmount: BigNumber;
    tokens: string[];
    amounts: BigNumber[];
    0: BigNumber;
    1: BigNumber;
    2: BigNumber;
    3: BigNumber;
    4: string[];
    5: BigNumber[];
  }>;

  "getPoolAssetsRedeemable(address,uint256)"(
    pool: string,
    poolAmount: BigNumberish,
    overrides?: CallOverrides
  ): Promise<{
    pairAmount: BigNumber;
    poolAmount: BigNumber;
    ethAmount: BigNumber;
    stakedAmount: BigNumber;
    tokens: string[];
    amounts: BigNumber[];
    0: BigNumber;
    1: BigNumber;
    2: BigNumber;
    3: BigNumber;
    4: string[];
    5: BigNumber[];
  }>;

  getRedeemableBalances(
    account: string,
    overrides?: CallOverrides
  ): Promise<{
    defi5_amounts: {
      pairAmount: BigNumber;
      poolAmount: BigNumber;
      ethAmount: BigNumber;
      stakedAmount: BigNumber;
      tokens: string[];
      amounts: BigNumber[];
      0: BigNumber;
      1: BigNumber;
      2: BigNumber;
      3: BigNumber;
      4: string[];
      5: BigNumber[];
    };
    cc10_amounts: {
      pairAmount: BigNumber;
      poolAmount: BigNumber;
      ethAmount: BigNumber;
      stakedAmount: BigNumber;
      tokens: string[];
      amounts: BigNumber[];
      0: BigNumber;
      1: BigNumber;
      2: BigNumber;
      3: BigNumber;
      4: string[];
      5: BigNumber[];
    };
    fff_amounts: {
      pairAmount: BigNumber;
      poolAmount: BigNumber;
      ethAmount: BigNumber;
      stakedAmount: BigNumber;
      tokens: string[];
      amounts: BigNumber[];
      0: BigNumber;
      1: BigNumber;
      2: BigNumber;
      3: BigNumber;
      4: string[];
      5: BigNumber[];
    };
    defi5LP_amounts: {
      pairAmount: BigNumber;
      poolAmount: BigNumber;
      ethAmount: BigNumber;
      stakedAmount: BigNumber;
      tokens: string[];
      amounts: BigNumber[];
      0: BigNumber;
      1: BigNumber;
      2: BigNumber;
      3: BigNumber;
      4: string[];
      5: BigNumber[];
    };
    cc10LP_amounts: {
      pairAmount: BigNumber;
      poolAmount: BigNumber;
      ethAmount: BigNumber;
      stakedAmount: BigNumber;
      tokens: string[];
      amounts: BigNumber[];
      0: BigNumber;
      1: BigNumber;
      2: BigNumber;
      3: BigNumber;
      4: string[];
      5: BigNumber[];
    };
    fffLP_amounts: {
      pairAmount: BigNumber;
      poolAmount: BigNumber;
      ethAmount: BigNumber;
      stakedAmount: BigNumber;
      tokens: string[];
      amounts: BigNumber[];
      0: BigNumber;
      1: BigNumber;
      2: BigNumber;
      3: BigNumber;
      4: string[];
      5: BigNumber[];
    };
    0: {
      pairAmount: BigNumber;
      poolAmount: BigNumber;
      ethAmount: BigNumber;
      stakedAmount: BigNumber;
      tokens: string[];
      amounts: BigNumber[];
      0: BigNumber;
      1: BigNumber;
      2: BigNumber;
      3: BigNumber;
      4: string[];
      5: BigNumber[];
    };
    1: {
      pairAmount: BigNumber;
      poolAmount: BigNumber;
      ethAmount: BigNumber;
      stakedAmount: BigNumber;
      tokens: string[];
      amounts: BigNumber[];
      0: BigNumber;
      1: BigNumber;
      2: BigNumber;
      3: BigNumber;
      4: string[];
      5: BigNumber[];
    };
    2: {
      pairAmount: BigNumber;
      poolAmount: BigNumber;
      ethAmount: BigNumber;
      stakedAmount: BigNumber;
      tokens: string[];
      amounts: BigNumber[];
      0: BigNumber;
      1: BigNumber;
      2: BigNumber;
      3: BigNumber;
      4: string[];
      5: BigNumber[];
    };
    3: {
      pairAmount: BigNumber;
      poolAmount: BigNumber;
      ethAmount: BigNumber;
      stakedAmount: BigNumber;
      tokens: string[];
      amounts: BigNumber[];
      0: BigNumber;
      1: BigNumber;
      2: BigNumber;
      3: BigNumber;
      4: string[];
      5: BigNumber[];
    };
    4: {
      pairAmount: BigNumber;
      poolAmount: BigNumber;
      ethAmount: BigNumber;
      stakedAmount: BigNumber;
      tokens: string[];
      amounts: BigNumber[];
      0: BigNumber;
      1: BigNumber;
      2: BigNumber;
      3: BigNumber;
      4: string[];
      5: BigNumber[];
    };
    5: {
      pairAmount: BigNumber;
      poolAmount: BigNumber;
      ethAmount: BigNumber;
      stakedAmount: BigNumber;
      tokens: string[];
      amounts: BigNumber[];
      0: BigNumber;
      1: BigNumber;
      2: BigNumber;
      3: BigNumber;
      4: string[];
      5: BigNumber[];
    };
  }>;

  "getRedeemableBalances(address)"(
    account: string,
    overrides?: CallOverrides
  ): Promise<{
    defi5_amounts: {
      pairAmount: BigNumber;
      poolAmount: BigNumber;
      ethAmount: BigNumber;
      stakedAmount: BigNumber;
      tokens: string[];
      amounts: BigNumber[];
      0: BigNumber;
      1: BigNumber;
      2: BigNumber;
      3: BigNumber;
      4: string[];
      5: BigNumber[];
    };
    cc10_amounts: {
      pairAmount: BigNumber;
      poolAmount: BigNumber;
      ethAmount: BigNumber;
      stakedAmount: BigNumber;
      tokens: string[];
      amounts: BigNumber[];
      0: BigNumber;
      1: BigNumber;
      2: BigNumber;
      3: BigNumber;
      4: string[];
      5: BigNumber[];
    };
    fff_amounts: {
      pairAmount: BigNumber;
      poolAmount: BigNumber;
      ethAmount: BigNumber;
      stakedAmount: BigNumber;
      tokens: string[];
      amounts: BigNumber[];
      0: BigNumber;
      1: BigNumber;
      2: BigNumber;
      3: BigNumber;
      4: string[];
      5: BigNumber[];
    };
    defi5LP_amounts: {
      pairAmount: BigNumber;
      poolAmount: BigNumber;
      ethAmount: BigNumber;
      stakedAmount: BigNumber;
      tokens: string[];
      amounts: BigNumber[];
      0: BigNumber;
      1: BigNumber;
      2: BigNumber;
      3: BigNumber;
      4: string[];
      5: BigNumber[];
    };
    cc10LP_amounts: {
      pairAmount: BigNumber;
      poolAmount: BigNumber;
      ethAmount: BigNumber;
      stakedAmount: BigNumber;
      tokens: string[];
      amounts: BigNumber[];
      0: BigNumber;
      1: BigNumber;
      2: BigNumber;
      3: BigNumber;
      4: string[];
      5: BigNumber[];
    };
    fffLP_amounts: {
      pairAmount: BigNumber;
      poolAmount: BigNumber;
      ethAmount: BigNumber;
      stakedAmount: BigNumber;
      tokens: string[];
      amounts: BigNumber[];
      0: BigNumber;
      1: BigNumber;
      2: BigNumber;
      3: BigNumber;
      4: string[];
      5: BigNumber[];
    };
    0: {
      pairAmount: BigNumber;
      poolAmount: BigNumber;
      ethAmount: BigNumber;
      stakedAmount: BigNumber;
      tokens: string[];
      amounts: BigNumber[];
      0: BigNumber;
      1: BigNumber;
      2: BigNumber;
      3: BigNumber;
      4: string[];
      5: BigNumber[];
    };
    1: {
      pairAmount: BigNumber;
      poolAmount: BigNumber;
      ethAmount: BigNumber;
      stakedAmount: BigNumber;
      tokens: string[];
      amounts: BigNumber[];
      0: BigNumber;
      1: BigNumber;
      2: BigNumber;
      3: BigNumber;
      4: string[];
      5: BigNumber[];
    };
    2: {
      pairAmount: BigNumber;
      poolAmount: BigNumber;
      ethAmount: BigNumber;
      stakedAmount: BigNumber;
      tokens: string[];
      amounts: BigNumber[];
      0: BigNumber;
      1: BigNumber;
      2: BigNumber;
      3: BigNumber;
      4: string[];
      5: BigNumber[];
    };
    3: {
      pairAmount: BigNumber;
      poolAmount: BigNumber;
      ethAmount: BigNumber;
      stakedAmount: BigNumber;
      tokens: string[];
      amounts: BigNumber[];
      0: BigNumber;
      1: BigNumber;
      2: BigNumber;
      3: BigNumber;
      4: string[];
      5: BigNumber[];
    };
    4: {
      pairAmount: BigNumber;
      poolAmount: BigNumber;
      ethAmount: BigNumber;
      stakedAmount: BigNumber;
      tokens: string[];
      amounts: BigNumber[];
      0: BigNumber;
      1: BigNumber;
      2: BigNumber;
      3: BigNumber;
      4: string[];
      5: BigNumber[];
    };
    5: {
      pairAmount: BigNumber;
      poolAmount: BigNumber;
      ethAmount: BigNumber;
      stakedAmount: BigNumber;
      tokens: string[];
      amounts: BigNumber[];
      0: BigNumber;
      1: BigNumber;
      2: BigNumber;
      3: BigNumber;
      4: string[];
      5: BigNumber[];
    };
  }>;

  callStatic: {
    getPairAssetsRedeemable(
      lpToken: string,
      pairAmount: BigNumberish,
      overrides?: CallOverrides
    ): Promise<{
      pairAmount: BigNumber;
      poolAmount: BigNumber;
      ethAmount: BigNumber;
      stakedAmount: BigNumber;
      tokens: string[];
      amounts: BigNumber[];
      0: BigNumber;
      1: BigNumber;
      2: BigNumber;
      3: BigNumber;
      4: string[];
      5: BigNumber[];
    }>;

    "getPairAssetsRedeemable(address,uint256)"(
      lpToken: string,
      pairAmount: BigNumberish,
      overrides?: CallOverrides
    ): Promise<{
      pairAmount: BigNumber;
      poolAmount: BigNumber;
      ethAmount: BigNumber;
      stakedAmount: BigNumber;
      tokens: string[];
      amounts: BigNumber[];
      0: BigNumber;
      1: BigNumber;
      2: BigNumber;
      3: BigNumber;
      4: string[];
      5: BigNumber[];
    }>;

    getPoolAssetsRedeemable(
      pool: string,
      poolAmount: BigNumberish,
      overrides?: CallOverrides
    ): Promise<{
      pairAmount: BigNumber;
      poolAmount: BigNumber;
      ethAmount: BigNumber;
      stakedAmount: BigNumber;
      tokens: string[];
      amounts: BigNumber[];
      0: BigNumber;
      1: BigNumber;
      2: BigNumber;
      3: BigNumber;
      4: string[];
      5: BigNumber[];
    }>;

    "getPoolAssetsRedeemable(address,uint256)"(
      pool: string,
      poolAmount: BigNumberish,
      overrides?: CallOverrides
    ): Promise<{
      pairAmount: BigNumber;
      poolAmount: BigNumber;
      ethAmount: BigNumber;
      stakedAmount: BigNumber;
      tokens: string[];
      amounts: BigNumber[];
      0: BigNumber;
      1: BigNumber;
      2: BigNumber;
      3: BigNumber;
      4: string[];
      5: BigNumber[];
    }>;

    getRedeemableBalances(
      account: string,
      overrides?: CallOverrides
    ): Promise<{
      defi5_amounts: {
        pairAmount: BigNumber;
        poolAmount: BigNumber;
        ethAmount: BigNumber;
        stakedAmount: BigNumber;
        tokens: string[];
        amounts: BigNumber[];
        0: BigNumber;
        1: BigNumber;
        2: BigNumber;
        3: BigNumber;
        4: string[];
        5: BigNumber[];
      };
      cc10_amounts: {
        pairAmount: BigNumber;
        poolAmount: BigNumber;
        ethAmount: BigNumber;
        stakedAmount: BigNumber;
        tokens: string[];
        amounts: BigNumber[];
        0: BigNumber;
        1: BigNumber;
        2: BigNumber;
        3: BigNumber;
        4: string[];
        5: BigNumber[];
      };
      fff_amounts: {
        pairAmount: BigNumber;
        poolAmount: BigNumber;
        ethAmount: BigNumber;
        stakedAmount: BigNumber;
        tokens: string[];
        amounts: BigNumber[];
        0: BigNumber;
        1: BigNumber;
        2: BigNumber;
        3: BigNumber;
        4: string[];
        5: BigNumber[];
      };
      defi5LP_amounts: {
        pairAmount: BigNumber;
        poolAmount: BigNumber;
        ethAmount: BigNumber;
        stakedAmount: BigNumber;
        tokens: string[];
        amounts: BigNumber[];
        0: BigNumber;
        1: BigNumber;
        2: BigNumber;
        3: BigNumber;
        4: string[];
        5: BigNumber[];
      };
      cc10LP_amounts: {
        pairAmount: BigNumber;
        poolAmount: BigNumber;
        ethAmount: BigNumber;
        stakedAmount: BigNumber;
        tokens: string[];
        amounts: BigNumber[];
        0: BigNumber;
        1: BigNumber;
        2: BigNumber;
        3: BigNumber;
        4: string[];
        5: BigNumber[];
      };
      fffLP_amounts: {
        pairAmount: BigNumber;
        poolAmount: BigNumber;
        ethAmount: BigNumber;
        stakedAmount: BigNumber;
        tokens: string[];
        amounts: BigNumber[];
        0: BigNumber;
        1: BigNumber;
        2: BigNumber;
        3: BigNumber;
        4: string[];
        5: BigNumber[];
      };
      0: {
        pairAmount: BigNumber;
        poolAmount: BigNumber;
        ethAmount: BigNumber;
        stakedAmount: BigNumber;
        tokens: string[];
        amounts: BigNumber[];
        0: BigNumber;
        1: BigNumber;
        2: BigNumber;
        3: BigNumber;
        4: string[];
        5: BigNumber[];
      };
      1: {
        pairAmount: BigNumber;
        poolAmount: BigNumber;
        ethAmount: BigNumber;
        stakedAmount: BigNumber;
        tokens: string[];
        amounts: BigNumber[];
        0: BigNumber;
        1: BigNumber;
        2: BigNumber;
        3: BigNumber;
        4: string[];
        5: BigNumber[];
      };
      2: {
        pairAmount: BigNumber;
        poolAmount: BigNumber;
        ethAmount: BigNumber;
        stakedAmount: BigNumber;
        tokens: string[];
        amounts: BigNumber[];
        0: BigNumber;
        1: BigNumber;
        2: BigNumber;
        3: BigNumber;
        4: string[];
        5: BigNumber[];
      };
      3: {
        pairAmount: BigNumber;
        poolAmount: BigNumber;
        ethAmount: BigNumber;
        stakedAmount: BigNumber;
        tokens: string[];
        amounts: BigNumber[];
        0: BigNumber;
        1: BigNumber;
        2: BigNumber;
        3: BigNumber;
        4: string[];
        5: BigNumber[];
      };
      4: {
        pairAmount: BigNumber;
        poolAmount: BigNumber;
        ethAmount: BigNumber;
        stakedAmount: BigNumber;
        tokens: string[];
        amounts: BigNumber[];
        0: BigNumber;
        1: BigNumber;
        2: BigNumber;
        3: BigNumber;
        4: string[];
        5: BigNumber[];
      };
      5: {
        pairAmount: BigNumber;
        poolAmount: BigNumber;
        ethAmount: BigNumber;
        stakedAmount: BigNumber;
        tokens: string[];
        amounts: BigNumber[];
        0: BigNumber;
        1: BigNumber;
        2: BigNumber;
        3: BigNumber;
        4: string[];
        5: BigNumber[];
      };
    }>;

    "getRedeemableBalances(address)"(
      account: string,
      overrides?: CallOverrides
    ): Promise<{
      defi5_amounts: {
        pairAmount: BigNumber;
        poolAmount: BigNumber;
        ethAmount: BigNumber;
        stakedAmount: BigNumber;
        tokens: string[];
        amounts: BigNumber[];
        0: BigNumber;
        1: BigNumber;
        2: BigNumber;
        3: BigNumber;
        4: string[];
        5: BigNumber[];
      };
      cc10_amounts: {
        pairAmount: BigNumber;
        poolAmount: BigNumber;
        ethAmount: BigNumber;
        stakedAmount: BigNumber;
        tokens: string[];
        amounts: BigNumber[];
        0: BigNumber;
        1: BigNumber;
        2: BigNumber;
        3: BigNumber;
        4: string[];
        5: BigNumber[];
      };
      fff_amounts: {
        pairAmount: BigNumber;
        poolAmount: BigNumber;
        ethAmount: BigNumber;
        stakedAmount: BigNumber;
        tokens: string[];
        amounts: BigNumber[];
        0: BigNumber;
        1: BigNumber;
        2: BigNumber;
        3: BigNumber;
        4: string[];
        5: BigNumber[];
      };
      defi5LP_amounts: {
        pairAmount: BigNumber;
        poolAmount: BigNumber;
        ethAmount: BigNumber;
        stakedAmount: BigNumber;
        tokens: string[];
        amounts: BigNumber[];
        0: BigNumber;
        1: BigNumber;
        2: BigNumber;
        3: BigNumber;
        4: string[];
        5: BigNumber[];
      };
      cc10LP_amounts: {
        pairAmount: BigNumber;
        poolAmount: BigNumber;
        ethAmount: BigNumber;
        stakedAmount: BigNumber;
        tokens: string[];
        amounts: BigNumber[];
        0: BigNumber;
        1: BigNumber;
        2: BigNumber;
        3: BigNumber;
        4: string[];
        5: BigNumber[];
      };
      fffLP_amounts: {
        pairAmount: BigNumber;
        poolAmount: BigNumber;
        ethAmount: BigNumber;
        stakedAmount: BigNumber;
        tokens: string[];
        amounts: BigNumber[];
        0: BigNumber;
        1: BigNumber;
        2: BigNumber;
        3: BigNumber;
        4: string[];
        5: BigNumber[];
      };
      0: {
        pairAmount: BigNumber;
        poolAmount: BigNumber;
        ethAmount: BigNumber;
        stakedAmount: BigNumber;
        tokens: string[];
        amounts: BigNumber[];
        0: BigNumber;
        1: BigNumber;
        2: BigNumber;
        3: BigNumber;
        4: string[];
        5: BigNumber[];
      };
      1: {
        pairAmount: BigNumber;
        poolAmount: BigNumber;
        ethAmount: BigNumber;
        stakedAmount: BigNumber;
        tokens: string[];
        amounts: BigNumber[];
        0: BigNumber;
        1: BigNumber;
        2: BigNumber;
        3: BigNumber;
        4: string[];
        5: BigNumber[];
      };
      2: {
        pairAmount: BigNumber;
        poolAmount: BigNumber;
        ethAmount: BigNumber;
        stakedAmount: BigNumber;
        tokens: string[];
        amounts: BigNumber[];
        0: BigNumber;
        1: BigNumber;
        2: BigNumber;
        3: BigNumber;
        4: string[];
        5: BigNumber[];
      };
      3: {
        pairAmount: BigNumber;
        poolAmount: BigNumber;
        ethAmount: BigNumber;
        stakedAmount: BigNumber;
        tokens: string[];
        amounts: BigNumber[];
        0: BigNumber;
        1: BigNumber;
        2: BigNumber;
        3: BigNumber;
        4: string[];
        5: BigNumber[];
      };
      4: {
        pairAmount: BigNumber;
        poolAmount: BigNumber;
        ethAmount: BigNumber;
        stakedAmount: BigNumber;
        tokens: string[];
        amounts: BigNumber[];
        0: BigNumber;
        1: BigNumber;
        2: BigNumber;
        3: BigNumber;
        4: string[];
        5: BigNumber[];
      };
      5: {
        pairAmount: BigNumber;
        poolAmount: BigNumber;
        ethAmount: BigNumber;
        stakedAmount: BigNumber;
        tokens: string[];
        amounts: BigNumber[];
        0: BigNumber;
        1: BigNumber;
        2: BigNumber;
        3: BigNumber;
        4: string[];
        5: BigNumber[];
      };
    }>;
  };

  filters: {};

  estimateGas: {
    getPairAssetsRedeemable(
      lpToken: string,
      pairAmount: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "getPairAssetsRedeemable(address,uint256)"(
      lpToken: string,
      pairAmount: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getPoolAssetsRedeemable(
      pool: string,
      poolAmount: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "getPoolAssetsRedeemable(address,uint256)"(
      pool: string,
      poolAmount: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getRedeemableBalances(
      account: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "getRedeemableBalances(address)"(
      account: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;
  };

  populateTransaction: {
    getPairAssetsRedeemable(
      lpToken: string,
      pairAmount: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "getPairAssetsRedeemable(address,uint256)"(
      lpToken: string,
      pairAmount: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    getPoolAssetsRedeemable(
      pool: string,
      poolAmount: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "getPoolAssetsRedeemable(address,uint256)"(
      pool: string,
      poolAmount: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    getRedeemableBalances(
      account: string,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "getRedeemableBalances(address)"(
      account: string,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;
  };
}
